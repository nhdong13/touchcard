<div class="billing top-m-20 panel">
  <br>
  <%= link_to root_path, class: "mdc-button mdc-button--stroked" do %>
    <!--<i class="material-icons mdc-button__icon">keyboard_backspace</i>-->
    Back
  <% end %>
  <br>
  <section class="text-center">
    <br>
    <div class="jumbotron top-m-20">
      <div class="container">
        <div class="f-s-300"><i class="material-icons">print</i> + <i class="material-icons">email</i> = 99&cent;</div>
        <div><strong>PRINT</strong> and <strong>MAIL</strong> cards for just <strong>99&cent;</strong> in the USA</div>
      </div>
    </div>


    <h3>How many customers do you want to reach this month?</h3>

    <div><span class="checkout-quantity-display f-s-400">&nbsp</span><span class="f-s-200">&nbsp</span></div>


    <!-- IMPORTANT: If you change these you have to change the slider quantity `aria-valuemax` as well -->
    Last Month: <%= @current_shop.last_month %>



    <div class="checkout-slider-wrapper">
      <div class="mdc-slider" tabindex="0" role="slider"
           aria-valuemin="0" aria-valuemax="12" aria-valuenow="8" data-step="1"
           aria-label="Select Value">
        <div class="mdc-slider__track-container">
          <div class="mdc-slider__track"></div>
        </div>
        <div class="mdc-slider__thumb-container">
          <!--<div class="mdc-slider__pin">-->
          <!--<span class="mdc-slider__pin-value-marker">10</span>-->
          <!--</div>-->
          <svg class="mdc-slider__thumb" width="21" height="21">
            <circle cx="10.5" cy="10.5" r="7.875"></circle>
          </svg>
          <div class="mdc-slider__focus-ring"></div>
        </div>
      </div>
    </div>


    <!--<div><small>*based on new customers last month</small></div>-->

    <br><br>

    <div>
      <strong><span class="checkout-display-price">&nbsp</span></strong>
      to raise your customer lifetime value &nbsp
    </div>
    <br>
     = form_with(model: @subscription, local: true, id:'checkout-form') do |form| %>

      <%= form.select(:quantity, nil, {}, {class: 'hidden checkout-quantity-select'}) do %>
        <%= options_for_select([['50', 50],
                                ['100', 100],
                                ['150', 150],
                                ['200', 200],
                                ['250', 250],
                                ['300', 300],
                                ['400', 400],
                                ['500', 500],
                                ['750', 750],
                                ['1000', 1000],
                                ['1500', 1500],
                                ['2000', 2000],
                                ['3000', 3000]
                               ]) %>
      <% end %>


      <%= hidden_field_tag(:stripeToken) %>

      <button id="checkout-purchase-button" class="mdc-button mdc-button--raised">Buy Now</button>


      <% if flash[:error].present? %>
        <div id="error_explanation">
          ERROR EXPLANATION:
          <p><%= flash[:error] %></p>
        </div>
      <% end %>


    <% end %>

  </section>
</div>


<br>


<script>
  var handler = StripeCheckout.configure({
    key: '<%= Rails.configuration.stripe[:publishable_key] %>',
    locale: 'auto',
    name: 'Touchcard',
    description: 'Postcard Subscription',
    image: '/touchcard-logo-white-spaced-700x700.jpg',
    zipCode: true,
    panelLabel: 'Subscribe',
    // allowRememberMe: false,
    // label: 'BUY IT NOW',
    // custom
    token: function(token) {
      document.querySelector('input#stripeToken').value = token.id;
      document.querySelector('#checkout-form').submit();
    }
  });

   document.getElementById('checkout-purchase-button').addEventListener('click', function(e) {
     // Open Checkout with further options:
     handler.open({
       amount: window.checkoutPriceDisplay
     });
     e.preventDefault();
   });

   // Close Checkout on page navigation:

  // TODO: Get this handler.close() working without repeat eventListeners
  //
  // function closeStripeOnExit () {
  //   debugger;
  //   handler.close();
  //   // window.removeEventListener('popstate', closeStripeOnExit);
  // }
  //
  //
  // window.addEventListener('popstate', closeStripeOnExit, {once: true});


</script>

